services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.key=certs/elasticsearch.key
      - xpack.security.transport.ssl.certificate=certs/elasticsearch.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/elasticsearch.crt

    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ./certs:/usr/share/elasticsearch/config/certs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elasticsearch:9200/_cluster/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
  logstash:
    container_name: logstash
    build:
      context: .
      dockerfile: LogstashDockerfile
    volumes:
      - ./pipeline:/usr/share/logstash/pipeline
      - ./data:/usr/share/logstash/data
    environment:
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: logstash --config.reload.automatic -f /usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044" # Port pour Logstash si n√©cessaire

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    deploy:
      resources:
        limits:
          memory: 2g

volumes:
  es-data:
    driver: local
